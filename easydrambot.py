from aiogram import Bot, Dispatcher, executor, types
from config import host, user, password, db_name
import pymysql
import random

connection = pymysql.connect(
    host=host,
    port=3306,
    user=user,
    password=password,
    database=db_name,
)

bot = Bot(token='5728249497:AAGRcOYKfJPV_CzUF3morWf0DGOZv6hGmgk')
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def start_comm(message: types.Message):
    await message.answer(
        '‘≤’°÷Ä’´ ’£’°’¨’∏÷Ç’Ω’ø EasyDramBot ‚ò∫ü•∞ ‘±’µ’Ω ’¢’∏’ø’´ ’∑’∂’∏÷Ä’∞’´’æ ’§’∏÷Ç÷Ñ ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’°’∑’≠’°’ø’•’¨ ’£’∏÷Ç’¥’°÷Ä ’§’´’ø’•’¨’∏’æ ’£’∏’æ’°’¶’§’°’µ’´’∂ ’∞’∏’¨’∏’æ’°’Ø’∂’•÷Ä ’Ø’°’¥ ’Ø’°’ø’°÷Ä’•’¨’∏’æ ’∏÷Ä’∏’∑’°’Ø’´ ’∏’π ’¢’°÷Ä’§ ’∞’°’∂’±’∂’°÷Ä’°÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’∂’•÷Ä÷â ‘≤’à’è’Ü ’à’í’Ü‘ª ‘ø‘±’Ü’à’Ü’Ü‘µ’ê ’à’ê’à’Ü’î ‘Ω‘±‘Ω’è‘µ‘º’à’í ‘¥‘µ’ä’î’à’í’Ñ ‘±‘ø‘ø‘±’à’í’Ü’è‘∏ ‘ø’ç’è‘±’Ü‘± ‘≤‘±’Ü ‘∏’Ü‘¥’Ñ‘ª’á’è ‚ùó‚ùó‚ùó 1‚Ä§ ’â’´ ’Ø’°÷Ä’•’¨’´ ’Ω’ø’•’≤’Æ’•’¨ fake ’°’Ø’Ø’°’∏÷Ç’∂’ø’∂’•÷Ä (’¢’∏’¨’∏÷Ä ’∏’π’°’Ø’ø’´’æ ’°’Ø’Ø’°’∏÷Ç’∂’ø’∂’•÷Ä’® ’ª’∂’ª’æ’•’¨’∏÷Ç ’•’∂)÷â 2‚Ä§ ‘≤’∏’¨’∏÷Ä ’æ’´’§’•’∏’∂’•÷Ä’® ’Ø’°’¥ ÷É’∏’Ω’ø’•÷Ä’® ’∫’•’ø÷Ñ ’ß ’∂’°’µ’•’¨ ’¥’´’∂’´’¥’∏÷Ç’¥ 1 ÷Ä’∏’∫’•÷â 3‚Ä§ ’â’´ ’Ø’°÷Ä’•’¨’´ ÷É’∏÷Ä’±’•’¨ ’ø’•’≤’°’§÷Ä’•’¨ ’£’∏’æ’°’¶’§ ’°’º’°’∂÷Å ’°’§’¥’´’∂’´’Ω’ø’°÷Ä÷Å’´’°’µ’´ ’∞’•’ø ’Ø’°’∫ ’∞’°’Ω’ø’°’ø’•’¨’∏÷Ç÷â 4‚Ä§ ’ä’•’ø÷Ñ ’ß ’∏÷Ç’∑’°’§’´÷Ä ’¨÷Ä’°÷Å’∂’•’¨ ’ø’æ’µ’°’¨’∂’•÷Ä’®, ’Ω’≠’°’¨ ’∂’∑’æ’°’Æ ’ø’æ’µ’°’¨’´’∂ ’£’∏÷Ç’¥’°÷Ä ’∏÷Ç’≤’°÷Ä’Ø’•’¨’∏÷Ç ’∞’°’¥’°÷Ä ’¥’•’∂÷Ñ ’∫’°’ø’°’Ω’≠’°’∂’°’ø’æ’∏÷Ç’©’µ’∏÷Ç’∂ ’π’•’∂÷Ñ ’Ø÷Ä’∏÷Ç’¥÷â 5‚Ä§ ’â’´ ’Ø’°÷Ä’•’¨’´ ’∂’∏÷Ç’µ’∂ ’§÷Ä’°’¥’°’∫’°’∂’°’Ø’´ ’ø’æ’µ’°’¨’∂’•÷Ä’® ÷Ö’£’ø’°’£’∏÷Ä’Æ’•’¨ ’¥’´÷Ñ’°’∂’´ ’°’Ø’Ø’°’∏÷Ç’∂’ø’∏÷Ç’¥÷â ‘±’¥’•’∂ ’§’´’ø’æ’°’Æ ÷É’∏’Ω’ø’´÷Å ’Ø’°’¥ ’æ’´’§’•’∏ ’´÷Å ’Ω’ø’°’∂’°’¨’∏÷Ç ’•÷Ñ 2 ’§÷Ä’°’¥÷â ‘≥’∏÷Ç’¥’°÷Ä’® ÷É’∏’≠’°’∂÷Å’∏÷Ç’¥ ’•’∂÷Ñ TellCell, IDram, Qiwi Wallet:')
    await message.answer('‘≤’∏’¨’∏÷Ä ’∞÷Ä’°’¥’°’∂’∂’•÷Ä’´’∂ ’Æ’°’∂’∏’©’°’∂’°’¨’∏÷Ç ’∞’°’¥’°÷Ä ’£÷Ä’•÷Ñ /commands')


@dp.message_handler(commands=['adminmagical'])
async def admin_comm(message: types.Message):
    await message.answer('‘≤’°÷Ä’´ ’£’°’¨’∏÷Ç’Ω’ø ‘±’§’¥’´’∂')


@dp.message_handler(commands=['commands'])
async def commands_comm(message: types.Message):
    await message.answer('/start - easydram - ’´ ’¥’°’Ω’´’∂')
    await message.answer('/reg - ’£÷Ä’°’∂÷Å’∏÷Ç’¥ ’∞’°’¥’°’Ø’°÷Ä’£’∏÷Ç’¥')
    await message.answer('/balance - ’´’¥ ’∞’°’∑’´’æ’®')


@dp.message_handler(commands=['reg'])
async def reg_comm(message: types.Message):
    await message.answer('‘≥÷Ä’°’∂÷Å’∏÷Ç’¥ ’•’∂÷Ñ ’Å’•’¶ ’∞’°’¥’°’Ø’°÷Ä’£’∏÷Ç’¥, ’∏÷Ä’´÷Å ’∞’•’ø’∏ ’§’∏÷Ç÷Ñ ’Ø’°÷Ä’∏’≤ ’•÷Ñ ’Ω’Ø’Ω’•’¨ ’£’∏÷Ç’¥’°÷Ä ’°’∑’≠’°’ø’•’¨ ‚ò∫')
    userpassword = str(random.randint(10000000, 99999999))
    userhash = abs(hash(userpassword))
    telegramid = message.from_user.id
    with connection.cursor() as cursor:
        select_query = f"SELECT * FROM `user` WHERE `telegramid`={telegramid}"
        cursor.execute(select_query)
        result = cursor.fetchone()
        print(result)
    if result == None:
        with connection.cursor() as cursor:
            insert_query = f"INSERT INTO `user` (telegramid,password,balance,hash) VALUES ({telegramid},{userpassword},0,'{userhash}')"
            cursor.execute(insert_query)
            connection.commit()
        await message.answer(
            f'‘¥’∏÷Ç÷Ñ ’∞’°’ª’∏’≤’∏÷Ç’©’µ’°’¥’¢ ’£÷Ä’°’∂÷Å’æ’•÷Å’´÷Ñ, ’¥’∏÷Ç’ø÷Ñ ’£’∏÷Ä’Æ’•÷Ñ ’¥’•÷Ä ’Ø’°’µ÷Ñ "hash" ’§’°’∑’ø’∏÷Ç’¥ ’£÷Ä’•÷Ñ ’Å’•÷Ä ’∏÷Ç’∂’´’æ’•÷Ä’Ω’°’¨ hash - ’® ({userhash}) ’∏÷Ä’´÷Å ’∞’•’ø’∏ ’Ø’Ω’ø’°’∂’°÷Ñ ’Å’•÷Ä password - ’® ÷á ’Ø’Ø’°÷Ä’∏’≤’°’∂’°÷Ñ ’£÷Ä’°’∂÷Å’•’¨ ’§÷Ä’°’¥’°’∫’°’∂’°’Ø’∂’•÷Ä’® ÷á ’Ω’ø’°’∂’°’¨ ’∞’°’æ’•’¨’µ’°’¨ ’ø’æ’µ’°’¨’∂’•÷Ä')
    else:
        await message.answer(f'‚õî ‘¥’∏÷Ç÷Ñ ’°÷Ä’§’•’∂ ’∏÷Ç’∂’•÷Ñ ’°’Ø’Ø’°’∏÷Ç’∂’ø, ÷É’∏÷Ä’±’•÷Ñ ’¥’∏÷Ç’ø÷Ñ ’£’∏÷Ä’Æ’•’¨÷â')


@dp.message_handler(commands=['balance'])
async def balance_comm(message: types.Message):
    await message.answer('’ç’ø’∏÷Ç’£’∏÷Ç’¥ ’•’∂÷Ñ ’Å’•÷Ä ’∞’°’∑’´’æ’® üßê')
    telegid = message.from_user.id
    with connection.cursor() as cursor:
        select_balance = f"SELECT * FROM `user` WHERE `telegramid`={telegid}"
        cursor.execute(select_balance)
        result = cursor.fetchone()
        userbalance = result[3]
        await message.answer(f'{userbalance} ’§÷Ä’°’¥')
        connection.commit()


if __name__ == "__main__":
    executor.start_polling(dp)

connection.close()
